// Import Express, Express Router, and Multer
// ============================================================================================================================
// ============================================================================================================================
// ============================================================================================================================
const express = require("express");
const router = express.Router();
const multer = require("multer");




// Import API Controllers
// ============================================================================================================================
// ============================================================================================================================
// ============================================================================================================================
const headingsAPI = require("./controllers/headingsAPI");
const locationsAPI = require("./controllers/locationsAPI");
const vehicleAPI = require("./controllers/vehicleAPI");
const bookAPI = require("./controllers/bookAPI");




// Multer Disk Storage
// ============================================================================================================================
// ============================================================================================================================
// ============================================================================================================================
// Initialize storage Variable with Multer Disk Storage Function to Save Uploaded Image Files to a Location within the Uploads Folder
// ============================================================================================================================
// ============================================================================================================================
let storage = multer.diskStorage({
    destination: async function(req, file, cb) {
        // Validate Field Name
        if(file.fieldname === "icon.iconimg"){
            // Set Directory Destination
            cb(null, "./uploads/icons");
        }
        else{
            // Set Directory Destination
            cb(null, "./uploads/previews");
        }
    },
    filename: function(req, file, cb){
        // Set File Name
        cb(null, file.fieldname + "_" + Date.now() + "_" + file.originalname);
    }
})



// Initialize upload Variable with Multer to Save Files of Type Image to a Location within the Uploads Folder When a Given Route Executes
// ============================================================================================================================
// ============================================================================================================================
let upload = multer({
    storage: storage
})
.any();




// Routes
// ============================================================================================================================
// ============================================================================================================================
// Heading Route
// ============================================================================================================================
// ============================================================================================================================
// Get Heading by Page Name
router.get("/headings/:page", headingsAPI.fetchByPage);



// Location Routes
// ============================================================================================================================
// ============================================================================================================================
// Get All Locations
// ============================================================================================================================
router.get("/locations", locationsAPI.fetchAll);


// Get All Location Store Names
// ============================================================================================================================
router.get("/locations/names/any", locationsAPI.fetchAllStoreNames);


// Get Location By ID
// ============================================================================================================================
router.get("/locations/:name", locationsAPI.fetchByName);


// Get Location of Head Office
// ============================================================================================================================
router.get("/locations/office/head", locationsAPI.fetchHeadOffice);



// Vehicle Routes
// ============================================================================================================================
// ============================================================================================================================
// Get Vehicle by ID
// ============================================================================================================================
router.get("/vehicle/:id", vehicleAPI.fetchByID);


// Get Vehicles by Category
// ============================================================================================================================
router.get("/vehicle/category/:category", vehicleAPI.fetchByCategory);


// #region Did Not Implement Due to Time Constraint and Client Promise
// Create Vehicle
// ============================================================================================================================
router.post("/vehicle/create", upload, vehicleAPI.create);


// Update Vehicle
// ============================================================================================================================
router.patch("/vehicle/update/:id", upload, vehicleAPI.update);


// Delete Vehicle
// ============================================================================================================================
router.delete("/vehicle/delete/:id", vehicleAPI.delete);
// #endregion Did Not Implement Due to Time Constraint and Client Promise



// Book Routes
// ============================================================================================================================
// ============================================================================================================================
// Get All Vehicle Makes
// ============================================================================================================================
router.get("/book/vehicle/makes/", bookAPI.fetchAllMakes);


// Get All Vehicle Models by a Specific Make
// ============================================================================================================================
router.get("/book/vehicle/models/:make", bookAPI.fetchModelsByMake);


// Get Colours for a Specific Vehicle by its Make and Model
// ============================================================================================================================
router.get("/book/vehicle/colours/:make/:model", bookAPI.fetchVehicleColours);




// Export Express Router
// ============================================================================================================================
// ============================================================================================================================
// ============================================================================================================================
module.exports = router;